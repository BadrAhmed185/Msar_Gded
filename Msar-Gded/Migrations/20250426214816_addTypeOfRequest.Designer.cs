// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Msar_Gded;

#nullable disable

namespace Msar_Gded.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250426214816_addTypeOfRequest")]
    partial class addTypeOfRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Msar_Gded.Models.College", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colleges");
                });

            modelBuilder.Entity("Msar_Gded.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrentCollegeId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentUniversityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfRequest")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationCollegeId")
                        .HasColumnType("int");

                    b.Property<int>("DestinationUniversityId")
                        .HasColumnType("int");

                    b.Property<bool?>("NeedRivision")
                        .HasColumnType("bit");

                    b.Property<int?>("PaymentCode")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TypeOfRequest")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentCollegeId");

                    b.HasIndex("CurrentUniversityId");

                    b.HasIndex("DestinationCollegeId");

                    b.HasIndex("DestinationUniversityId");

                    b.HasIndex("StatusId");

                    b.HasIndex("StudentId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Msar_Gded.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("Msar_Gded.Models.Student", b =>
                {
                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CollegeId")
                        .HasColumnType("int");

                    b.Property<int>("DegreeWithLanguage")
                        .HasColumnType("int");

                    b.Property<string>("EducationalZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GraduationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HighSchoolDivision")
                        .HasColumnType("int");

                    b.Property<byte[]>("LeterOfStatus")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("PureDegree")
                        .HasColumnType("int");

                    b.Property<byte[]>("SchoolCertificate")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TotalDegree")
                        .HasColumnType("int");

                    b.Property<string>("UniversityGrade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UniversityId")
                        .HasColumnType("int");

                    b.HasKey("NationalId");

                    b.HasIndex("CollegeId");

                    b.HasIndex("UniversityId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Msar_Gded.Models.University", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("Msar_Gded.Models.Request", b =>
                {
                    b.HasOne("Msar_Gded.Models.College", "CurrentCollege")
                        .WithMany("RequestsAsCurrent")
                        .HasForeignKey("CurrentCollegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Msar_Gded.Models.University", "CurrentUniversity")
                        .WithMany("RequestsAsCurrent")
                        .HasForeignKey("CurrentUniversityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Msar_Gded.Models.College", "DestinationCollege")
                        .WithMany("RequestsAsDestination")
                        .HasForeignKey("DestinationCollegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Msar_Gded.Models.University", "DestinationUniversity")
                        .WithMany("RequestsAsDestination")
                        .HasForeignKey("DestinationUniversityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Msar_Gded.Models.Status", "Status")
                        .WithMany("Requests")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Msar_Gded.Models.Student", "Student")
                        .WithMany("Requests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentCollege");

                    b.Navigation("CurrentUniversity");

                    b.Navigation("DestinationCollege");

                    b.Navigation("DestinationUniversity");

                    b.Navigation("Status");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Msar_Gded.Models.Student", b =>
                {
                    b.HasOne("Msar_Gded.Models.College", "College")
                        .WithMany("Students")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Msar_Gded.Models.University", "University")
                        .WithMany("Students")
                        .HasForeignKey("UniversityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("College");

                    b.Navigation("University");
                });

            modelBuilder.Entity("Msar_Gded.Models.College", b =>
                {
                    b.Navigation("RequestsAsCurrent");

                    b.Navigation("RequestsAsDestination");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Msar_Gded.Models.Status", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Msar_Gded.Models.Student", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("Msar_Gded.Models.University", b =>
                {
                    b.Navigation("RequestsAsCurrent");

                    b.Navigation("RequestsAsDestination");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
